apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - redis-server
            {{- if .Values.config.enabled }}
            - "/redis-master/redis.conf"
            {{- end }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: redis
            initialDelaySeconds: {{ .Values.redis.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.redis.livenessProbe.timeoutSeconds }}
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: {{ .Values.redis.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.redis.readinessProbe.timeoutSeconds }}
          resources:
            limits:
              cpu: {{ .Values.redis.resources.limits.cpu }}
              memory: {{ .Values.redis.resources.limits.memory }}
            requests:
              cpu: {{ .Values.redis.resources.requests.cpu }}
              memory: {{ .Values.redis.resources.requests.memory }}
          volumeMounts:
            - mountPath: /var/lib/redis
              name: data
            {{- if .Values.config.enabled }}
            - mountPath: /redis-master
              name: config
            {{- end }}
      volumes:
        - name: data
          emptyDir: {}
        {{- if .Values.config.enabled }}
        - name: config
          configMap:
            name: redis-config
            items:
              - key: redis.conf
                path: redis.conf
        {{- end }}